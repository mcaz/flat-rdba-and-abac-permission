{
  "version": 3,
  "sources": ["../../../packages/permission/src/types.ts", "../../../packages/permission/src/utils.ts", "../../../packages/permission/src/grants.ts"],
  "sourcesContent": ["import type { Location, Params } from \"react-router\";\nimport { definePermissions } from \"./utils\";\nimport { grants } from \"./grants\";\n\nexport const RoleEnum = {\n  ADMIN: \"ADMIN\",\n  GENERAL: \"GENERAL\",\n  DEVELOPER: \"DEVELOPER\",\n} as const;\n\n// ロール定義\nexport type Roles = (typeof RoleEnum)[keyof typeof RoleEnum];\n\n// 型定義関連\nexport type Grants = typeof grants;\nexport type Resources = keyof Grants;\nexport type ResourceDynamicParam<T extends Resources> =\n  T extends keyof Grants\n    ? Grants[T] extends ReturnType<typeof definePermissions<infer U>>\n      ? U\n      : never\n    : never;\n\nexport type Actions = \"read\" | \"create\" | \"update\" | \"delete\";\n\nexport type Contexts<T> = {\n  urlParams?: Readonly<Params<string>>;\n  location?: Location<undefined>;\n  dynamicParam: T;\n};\n\nexport type RolePermissionMap<T> = {\n  [K in Roles]?: (context: Contexts<T>) => boolean;\n};\n\nexport type GrantDefinition<T> = RolePermissionMap<T>;\nexport type ActionPermissions<T> = Partial<GrantDefinition<T>>;\nexport type PermissionError = {\n  code: \"PERMISSION_DENIED\" | \"INVALID_PERMISSION\" | \"SYSTEM_ERROR\";\n  message: string;\n  details?: unknown;\n}; ", "import { ActionPermissions, Actions, Contexts, GrantDefinition, Grants, Resources, RoleEnum, RolePermissionMap, Roles } from \"./types\";\n\nfunction whiteList<T>(def: Partial<GrantDefinition<T>>): GrantDefinition<T> {\n  const defaultGrant = Object.values(RoleEnum).reduce<GrantDefinition<T>>((acc, role) => {\n    acc[role] = () => false;\n    return acc;\n  }, {} as GrantDefinition<T>);\n\n  return {\n    ...defaultGrant,\n    ...def,\n  };\n}\n\nexport function definePermissions<T = undefined>(def?: {\n  read?: ActionPermissions<T>;\n  create?: ActionPermissions<T>;\n  update?: ActionPermissions<T>;\n  delete?: ActionPermissions<T>;\n}) {\n  return {\n    read: whiteList(def?.read ?? {}),\n    create: whiteList(def?.create ?? {}),\n    update: whiteList(def?.update ?? {}),\n    delete: whiteList(def?.delete ?? {}),\n  } as const;\n}\n\nexport function handlePermissionError(error: {\n  code: \"INVALID_PERMISSION\" | \"SYSTEM_ERROR\";\n  message: string;\n  details?: unknown;\n}): false {\n  console.error(`Permission Error: ${error.code} - ${error.message}`, error.details);\n  return false;\n}\n\nexport function verifyPermission({\n  grants,\n  role,\n  action,\n  resource,\n  context,\n}: {\n  grants: Grants;\n  role?: Roles;\n  action?: Actions;\n  resource?: Resources;\n  context: Contexts<unknown>;\n}): boolean {\n  if (!role || !action || !resource) {\n    return handlePermissionError({\n      code: \"INVALID_PERMISSION\",\n      message: `Role or action or resource is not defined for role: ${role}, action: ${action}, resource: ${resource}`,\n    });\n  }\n\n  const permission = grants[resource]?.[action] as RolePermissionMap<unknown>;\n  const actionName = String(action);\n  const resourceName = String(resource);\n\n  if (!permission) {\n    return handlePermissionError({\n      code: \"INVALID_PERMISSION\",\n      message: `Permission not defined for action: ${actionName}, resource: ${resourceName}`,\n    });\n  }\n\n  try {\n    const hasPermission = permission[role]?.(context);\n\n    if (typeof hasPermission !== \"boolean\") {\n      return handlePermissionError({\n        code: \"INVALID_PERMISSION\",\n        message: `Invalid permission result for action: ${actionName}, resource: ${resourceName}`,\n      });\n    }\n\n    return hasPermission;\n  } catch (error) {\n    return handlePermissionError({\n      code: \"SYSTEM_ERROR\",\n      message: `Permission check failed for action: ${actionName}, resource: ${resourceName}`,\n      details: error,\n    });\n  }\n} ", "import { definePermissions } from \"./utils\";\n\n// 権限グラント定義\nexport const grants = {\n  \"resource:article\": definePermissions({\n    read: {\n      ADMIN: () => true,\n      GENERAL: () => true,\n      DEVELOPER: () => true,\n    },\n    create: undefined,\n    update: undefined,\n    delete: undefined,\n  }),\n\n  \"resource:user\": definePermissions({\n    create: {\n      ADMIN: () => false,\n      DEVELOPER: () => false,\n      GENERAL: () => false,\n    },\n  }),\n\n  \"page:users/[id]\": definePermissions<{ userId: string }>({\n    read: {\n      ADMIN: (ctx) => ctx.dynamicParam.userId === \"455cb998-2cb3-41cd-8c9e-41416db7d4eb\",\n      GENERAL: (ctx) => ctx.urlParams?.id === ctx.urlParams?.id,\n      DEVELOPER: () => true,\n    },\n  }),\n\n  \"page:articles/[id]\": definePermissions<boolean>({\n    read: {\n      ADMIN: ({ dynamicParam: allowLink }) => allowLink,\n      GENERAL: ({ dynamicParam: allowLink }) => allowLink,\n      DEVELOPER: ({ dynamicParam: allowLink }) => allowLink,\n    },\n  }),\n\n  \"component:organisms/Header\": definePermissions({\n    read: {\n      ADMIN: () => true,\n    },\n  }),\n\n  \"component:organisms/Sidebar\": definePermissions(),\n\n  \"component:challenges/page#organisms/ChallengeCardTabs\": definePermissions({\n    read: {\n      ADMIN: () => true,\n      GENERAL: () => true,\n      DEVELOPER: () => true,\n    },\n    update: {\n      ADMIN: () => true,\n    },\n  }),\n} as const; "],
  "mappings": "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",
  "names": ["grants"]
}
